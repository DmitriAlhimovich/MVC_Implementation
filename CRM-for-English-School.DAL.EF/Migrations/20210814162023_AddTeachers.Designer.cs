// <auto-generated />
using CRM_for_English_School.DAL.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRM_for_English_School.DAL.EF.Migrations
{
    [DbContext(typeof(EnglishSchoolContext))]
    [Migration("20210814162023_AddTeachers")]
    partial class AddTeachers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRM_for_English_School.BLL.Entities.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CurrentEnglishLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Age = 23,
                            CurrentEnglishLevel = "Elementary",
                            FirstName = "Иван",
                            Gender = 0,
                            LastName = "Иванов",
                            MiddleName = "Иванович"
                        },
                        new
                        {
                            ID = 2,
                            Age = 28,
                            CurrentEnglishLevel = "Pre-Intermediate",
                            FirstName = "Петр",
                            Gender = 0,
                            LastName = "Петров",
                            MiddleName = "Петрович"
                        },
                        new
                        {
                            ID = 3,
                            Age = 24,
                            CurrentEnglishLevel = "Intermediate",
                            FirstName = "Ольга",
                            Gender = 1,
                            LastName = "Синичкина",
                            MiddleName = "Дмитриевна"
                        },
                        new
                        {
                            ID = 4,
                            Age = 25,
                            CurrentEnglishLevel = "Intermediate",
                            FirstName = "Виктор",
                            Gender = 0,
                            LastName = "Васнецов",
                            MiddleName = "Борисович"
                        },
                        new
                        {
                            ID = 5,
                            Age = 23,
                            CurrentEnglishLevel = "Elementary",
                            FirstName = "Дарья",
                            Gender = 1,
                            LastName = "Прокофьева",
                            MiddleName = "Петровна"
                        });
                });

            modelBuilder.Entity("CRM_for_English_School.BLL.Entities.StudentsGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TeacherId");

                    b.ToTable("StudentsGroups");
                });

            modelBuilder.Entity("CRM_for_English_School.BLL.Entities.Teacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("GraduatedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainSpecialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Age = 32,
                            Degree = "Bachelor",
                            FirstName = "Светлана",
                            Gender = 1,
                            GraduatedFrom = "MSLU",
                            LastName = "Синицина",
                            MainSpecialization = "English language history",
                            MiddleName = "Викторовна"
                        },
                        new
                        {
                            ID = 2,
                            Age = 37,
                            Degree = "Master",
                            FirstName = "Екатерина",
                            Gender = 1,
                            GraduatedFrom = "BSU",
                            LastName = "Кузнецова",
                            MainSpecialization = "Linguistics",
                            MiddleName = "Степановна"
                        });
                });

            modelBuilder.Entity("CRM_for_English_School.BLL.Entities.StudentsGroup", b =>
                {
                    b.HasOne("CRM_for_English_School.BLL.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
